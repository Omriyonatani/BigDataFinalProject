<div class="card">
  <div class="card-header card-header-warning">
    <h4 class="card-title">waiting Calls </h4>
    <!-- <p class="card-category">New employees on 15th September, 2016</p> -->
  </div>
<div>
    <canvas id="myChart" width="900" height="400"></canvas>
  </div>
  <script src="/socket.io/socket.io.js"></script>
    <script>
      var socket = io.connect();
    </script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>

    //creating the time array with 5 min' aggregation
    function getTimeRanges(interval, language = window.navigator.language) {
      const ranges = [];
      const date = new Date();
      const format = {
          hour: 'numeric',
          minute: 'numeric',
      };

      for (let minutes = 0; minutes < 24 * 60; minutes = minutes + interval) {
          date.setHours(0);
          date.setMinutes(minutes);
          ranges.push(date.toLocaleTimeString(language, format));
      }

        return ranges;
    }


  
    const labels = getTimeRanges(5,'ru') 
  
    const data = {
      labels: labels,
      datasets: [{
        label: 'Waiting Calls',
        backgroundColor: 'rgb(255, 99, 132)',
        borderColor: 'rgb(255, 99, 132)',
        data: [0, 10, 5, 2, 20, 30, 45  ],
      },]
    };
  
    const config = {
      type: 'line',
      data: data,
      options: {}
    };

    const myChart = new Chart(
      document.getElementById('myChart'),
      config
    );
  </script>
</div>
<div class="card">
  <!-- <div class="card-header card-header-info"> -->
    <div class="card-header card-header-tabs card-header-primary" >
    <h4 class="card-title">Waiting Call time</h4>
    <!-- <p class="card-category">New employees on 15th September, 2016</p> -->
  </div>
  <div>
    <canvas id="myChart2" width="900" height="500"></canvas>
  </div>
  <script>

  const labels2 = getTimeRanges(5,'ru') 

  const data2 = {
    labels: [12,13,14,15,16,17,18],
    datasets: [{
      label: 'Waiting Call time',
      backgroundColor: [
        
      'rgba(255, 99, 132, 1)',
      'rgba(255, 159, 64, 1)',
      'rgba(255, 205, 86, 1)',
      'rgba(75, 192, 192, 1)',
      'rgba(54, 162, 235, 1)',
      'rgba(153, 102, 255, 1)',
      'rgba(201, 203, 207, 1)'
    ],
      borderColor: 'rgb(33, 99, 132)',
      data: [100, 10, 5, 2, 20, 30, 45],
      backgroundColor: [
      'rgba(255, 99, 132, 1)',
      'rgba(255, 159, 64, 1)',
      'rgba(255, 205, 86, 1)',
      'rgba(75, 192, 192, 1)',
      'rgba(54, 162, 235, 1)',
      'rgba(153, 102, 255, 1)',
      'rgba(201, 203, 207, 1)'
    ],
    }]
  };

  const config2 = {
    type: 'bar',
    data: data2,
    options: {}
  };
  const myChart2 = new Chart(
    document.getElementById('myChart2'),
    config2
  );
</script>
</div>


<div class="card " style="width: 20rem;">
  <div class="card-header card-header-tabs card-header-primary" >
    <h4 class="card-title">Call Topic</h4>
  </div>
  <div>
  <canvas id="myChart3" width="350" height="350"></canvas>
  </div>
  <script>
  const data3 = {
  labels: [
    'Join',
    'disconnect',
    'service',
    'report'
  ],
  datasets: [{
    label: 'Call Topic',
    data: [300, 50, 100],
    backgroundColor: [
      'rgb(255, 99, 132)',
      'rgb(54, 162, 235)',
      'rgb(255, 205, 86)'
    ],
    hoverOffset: 8,
  }],

};

  const config3 = {
    type: 'doughnut',
    data: data3,
    
  };
</script>
<script>
  const myChart3 = new Chart(
    document.getElementById('myChart3'),
    config3
  );
</script>
</div>